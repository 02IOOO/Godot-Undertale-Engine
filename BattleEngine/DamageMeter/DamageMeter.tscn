[gd_scene load_steps=8 format=3 uid="uid://dw6fhb53pfqox"]

[ext_resource type="Texture2D" uid="uid://df7cqu8ir2am1" path="res://BattleEngine/DamageMeter/bar_one.png" id="1"]
[ext_resource type="Texture2D" uid="uid://sfd8a4eqqn76" path="res://BattleEngine/DamageMeter/bar_two.png" id="2"]
[ext_resource type="Texture2D" uid="uid://eg4xf725gd82" path="res://BattleEngine/DamageMeter/meter.png" id="3"]

[sub_resource type="GDScript" id="GDScript_3nbgr"]
script/source = "extends Node2D

var stopped : bool = false

signal slaughter
signal enemys_turn

func _ready():
	$AnimationPlayer.play_backwards(\"Out\")

func _process(delta):
	if not stopped:
		$Bar.position.x += 350 * delta
		if (Input.is_action_just_pressed(\"ui_accept\") or $Bar.position.x > 280):
			hit()

func hit():
	stopped = true
	emit_signal(\"slaughter\")
	$Bar.play()
	yield(get_tree().create_timer(2), \"timeout\")
	disappear()

func disappear():
	emit_signal(\"enemys_turn\")
	$Bar.queue_free()
	$AnimationPlayer.play(\"Out\")

func _on_animation_finished(anim_name):
	if get_node_or_null(\"Bar\") == null:
		queue_free()
"

[sub_resource type="SpriteFrames" id="1"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1")
}, {
"duration": 1.0,
"texture": ExtResource("2")
}],
"loop": true,
"name": &"default",
"speed": 10.0
}]

[sub_resource type="Animation" id="2"]
resource_name = "Out"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Meter:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(3.03143, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(0, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Meter:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_hxfdb"]
_data = {
"Out": SubResource("2")
}

[node name="Meter" type="Node2D"]
script = SubResource("GDScript_3nbgr")
__meta__ = {
"_edit_group_": true
}

[node name="Meter" type="Sprite2D" parent="."]
modulate = Color(1, 1, 1, 0)
scale = Vector2(1e-05, 1)
texture = ExtResource("3")

[node name="Bar" type="AnimatedSprite2D" parent="."]
position = Vector2(-280, 0)
sprite_frames = SubResource("1")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_hxfdb")
}

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_finished"]
